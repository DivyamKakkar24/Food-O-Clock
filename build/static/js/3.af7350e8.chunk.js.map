{"version":3,"sources":["components/UI/Modal.module.css","components/Cart/Cart.module.css","components/Cart/CartItem.module.css","components/Cart/Checkout.module.css","components/UI/Modal.js","components/Cart/CartItem.js","components/Cart/Checkout.js","components/Cart/Cart.js"],"names":["module","exports","Backdrop","props","className","classes","backdrop","onClick","onCloseCart","ModalOverlay","modal","content","children","portalElement","document","getElementById","Modal","ReactDOM","createPortal","CartItem","price","toFixed","name","summary","amount","actions","onRemove","onAdd","isEmpty","value","trim","Checkout","useState","street","city","postalCode","formInputsValidity","setFormInputsValidity","nameInputRef","useRef","streetInputRef","postalCodeInputRef","cityInputRef","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","onSubmit","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","length","onConfirm","htmlFor","type","id","ref","onCancel","submit","Cart","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","cartCtx","useContext","CartContext","totalAmount","hasItems","items","cartItemRemoveHandler","removeItem","cartItemAddHandler","item","addItem","submitOrderHandler","userData","a","fetch","method","body","JSON","stringify","user","orderedItems","clearCart","cartItems","map","bind","modalActions","button","cartModalContent","Fragment","total","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","file":"static/js/3.af7350e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__19EqC\",\"modal\":\"Modal_modal__2bbZk\",\"slide-down\":\"Modal_slide-down__BlhRH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__vVNLg\",\"total\":\"Cart_total__2f3sM\",\"actions\":\"Cart_actions__3eF3B\",\"button--alt\":\"Cart_button--alt__180Ng\",\"button\":\"Cart_button__2WRIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__3ADxX\",\"summary\":\"CartItem_summary__8yU40\",\"price\":\"CartItem_price__36efH\",\"amount\":\"CartItem_amount__ANTDh\",\"actions\":\"CartItem_actions__26b7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__2yU7Z\",\"control\":\"Checkout_control__3VdHg\",\"actions\":\"Checkout_actions__1PLOe\",\"submit\":\"Checkout_submit__dlt1Q\",\"invalid\":\"Checkout_invalid__3gsXk\"};","import {Fragment} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport classes from './Modal.module.css';\r\n\r\nconst Backdrop = props => {\r\n\treturn (\r\n\t\t<div className = {classes.backdrop} onClick = {props.onCloseCart} />\r\n\t);\r\n};\r\n \r\nconst ModalOverlay = props => {\r\n\treturn (\r\n\t\t<div className = {classes.modal}>\r\n\t\t\t<div className = {classes.content}>{props.children}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst portalElement = document.getElementById('overlays');\r\n\r\nconst Modal = props => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{ReactDOM.createPortal(<Backdrop onCloseCart = {props.onCloseCart} />, portalElement)}\r\n\t\t\t{ReactDOM.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, \r\n\t\t\tportalElement)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Modal;","import classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n  const price = `$${props.price.toFixed(2)}`;\n\n  return (\n    <li className={classes['cart-item']}>\n      <div>\n        <h2>{props.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.amount}>x {props.amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={props.onRemove}>âˆ’</button>\n        <button onClick={props.onAdd}>+</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import {useRef, useState} from 'react';\r\n\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isSixChars = value => value.trim().length === 6;\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isSixChars(enteredPostalCode);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCodeIsValid\r\n    });\r\n\r\n    const formIsValid = (\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid);\r\n\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      postalCode: enteredPostalCode\r\n    });\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\r\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\r\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`;\r\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' ref = {nameInputRef} />\r\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n      </div>\r\n\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref = {streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n      </div>\r\n\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref = {postalCodeInputRef} />\r\n        {!formInputsValidity.postalCode && <p>Please enter a valid postal code (6 characters long)!</p>}\r\n      </div>\r\n\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref = {cityInputRef} />\r\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n      </div>\r\n\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import React, {useContext, useState} from 'react';\r\n\r\nimport Modal from '../UI/Modal';\r\nimport classes from './Cart.module.css';\r\nimport CartContext from '../../store/cart-context';\r\nimport CartItem from './CartItem';\r\nimport Checkout from './Checkout';\r\n\r\nconst Cart = props => {\r\n\tconst [isCheckout, setIsCheckout] = useState(false);\r\n\tconst [isSubmitting, setIsSubmitting] = useState(false);\r\n\tconst [didSubmit, setDidSubmit] = useState(false);\r\n\tconst cartCtx = useContext(CartContext);\r\n\r\n\tconst totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n\tconst hasItems = cartCtx.items.length > 0;\r\n\r\n\tconst cartItemRemoveHandler = id => {\r\n\t\tcartCtx.removeItem(id);\r\n\t};\r\n\r\n\tconst cartItemAddHandler = item => {\r\n\t\tcartCtx.addItem({...item, amount: 1});\r\n\t};\r\n\r\n\tconst orderHandler = () => {\r\n\t\tsetIsCheckout(true);\r\n\t};\r\n\r\n\tconst submitOrderHandler = async (userData) => {\r\n\t\tsetIsSubmitting(true);\r\n\t\tawait fetch('https://react-http-4e5dc-default-rtdb.firebaseio.com/orders.json', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tuser: userData,\r\n\t\t\t\torderedItems: cartCtx.items\r\n\t\t\t})\r\n\t\t});\r\n\t\tsetIsSubmitting(false);\r\n\t\tsetDidSubmit(true);\r\n\t\tcartCtx.clearCart();\r\n\t};\r\n\r\n\tconst cartItems = (<ul className = {classes['cart-items']}>\r\n\t\t{cartCtx.items.map(item => (\r\n\t\t\t<CartItem \r\n\t\t\t\tkey = {item.id}\r\n\t\t\t\tname = {item.name} \r\n\t\t\t\tamount = {item.amount} \r\n\t\t\t\tprice = {item.price} \r\n\t\t\t\tonRemove = {cartItemRemoveHandler.bind(null, item.id)} \r\n\t\t\t\tonAdd = {cartItemAddHandler.bind(null, item)} \r\n\t\t\t/>\r\n\t\t))}\r\n\t</ul>);\r\n\r\n\tconst modalActions = (\r\n\t\t<div className = {classes.actions}>\r\n\t\t\t<button className = {classes['button--alt']} onClick = {props.onCloseCart}>Close</button>\r\n\t\t\t{hasItems && <button className = {classes.button} onClick = {orderHandler}>Order</button>}\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst cartModalContent = (\r\n\t\t<React.Fragment>\r\n\t\t\t{cartItems}\r\n\t\t\t<div className = {classes.total}>\r\n\t\t\t\t<span>Total Amount</span>\r\n\t\t\t\t<span>{totalAmount}</span>\r\n\t\t\t</div>\r\n\t\t\t{isCheckout && <Checkout onConfirm = {submitOrderHandler} onCancel = {props.onCloseCart} />}\r\n\t\t\t{!isCheckout && modalActions}\r\n\t\t</React.Fragment>\r\n\t);\r\n\r\n\tconst isSubmittingModalContent = <p>Sending order data...</p>; \r\n\tconst didSubmitModalContent = (\r\n\t\t<React.Fragment>\r\n\t\t\t<p>Successfully sent the order!</p>\r\n\t\t\t<div className = {classes.actions}>\r\n\t\t\t\t<button className = {classes.button} onClick = {props.onCloseCart}>Close</button>\r\n\t\t\t</div>\t\t\r\n\t\t</React.Fragment>\r\n\t);\t\r\n\r\n\treturn (\r\n\t\t<Modal onCloseCart = {props.onCloseCart}>\r\n\t\t\t{!isSubmitting && !didSubmit && cartModalContent}\r\n\t\t\t{isSubmitting && isSubmittingModalContent}\r\n\t\t\t{!isSubmitting && didSubmit && didSubmitModalContent}\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default Cart;"],"sourceRoot":""}